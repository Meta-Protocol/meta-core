// Code generated by mockery v2.38.0. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"

	types "github.com/cosmos/cosmos-sdk/types"
)

// FungibleAuthorityKeeper is an autogenerated mock type for the FungibleAuthorityKeeper type
type FungibleAuthorityKeeper struct {
	mock.Mock
}

// CheckAuthorization provides a mock function with given fields: ctx, msg
func (_m *FungibleAuthorityKeeper) CheckAuthorization(ctx types.Context, msg types.Msg) error {
	ret := _m.Called(ctx, msg)

	if len(ret) == 0 {
		panic("no return value specified for CheckAuthorization")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(types.Context, types.Msg) error); ok {
		r0 = rf(ctx, msg)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewFungibleAuthorityKeeper creates a new instance of FungibleAuthorityKeeper. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewFungibleAuthorityKeeper(t interface {
	mock.TestingT
	Cleanup(func())
}) *FungibleAuthorityKeeper {
	mock := &FungibleAuthorityKeeper{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
