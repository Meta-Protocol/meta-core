syntax = "proto3";
package zetachain.zetacore.crosschain;

import "gogoproto/gogo.proto";
import "zetachain/zetacore/pkg/chains/chains.proto";
import "zetachain/zetacore/pkg/coin/coin.proto";
import "zetachain/zetacore/pkg/proofs/proofs.proto";
import "zetachain/zetacore/crosschain/rate_limiter_flags.proto";
import "zetachain/zetacore/crosschain/cross_chain_tx.proto";

option go_package = "github.com/zeta-chain/node/x/crosschain/types";

// legacy MsgAddOutboundTracker
// defined to keep codec compatibility
message MsgAddToOutTxTracker {
  string creator = 1;
  int64 chain_id = 2;
  uint64 nonce = 3;
  string tx_hash = 4;
  pkg.proofs.Proof proof = 5;
  string block_hash = 6;
  int64 tx_index = 7;
}

// legacy MsgAddInboundTracker
// defined to keep codec compatibility
message MsgAddToInTxTracker {
  string creator = 1;
  int64 chain_id = 2;
  string tx_hash = 3;
  pkg.coin.CoinType coin_type = 4;
  pkg.proofs.Proof proof = 5;
  string block_hash = 6;
  int64 tx_index = 7;
}

// legacy MsgRemoveOutboundTracker
// defined to keep codec compatibility
message MsgRemoveFromOutTxTracker {
  string creator = 1;
  int64 chain_id = 2;
  uint64 nonce = 3;
}

// legacy MsgVoteOutbound
// defined to keep codec compatibility
message MsgVoteOnObservedOutboundTx {
  string creator = 1;
  string cctx_hash = 2;
  string observed_outTx_hash = 3;
  uint64 observed_outTx_blockHeight = 4;
  uint64 observed_outTx_gas_used = 10;
  string observed_outTx_effective_gas_price = 11 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
  uint64 observed_outTx_effective_gas_limit = 12;
  string value_received = 5 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Uint",
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"value_received\""
  ];
  pkg.chains.ReceiveStatus status = 6;
  int64 outTx_chain = 7;
  uint64 outTx_tss_nonce = 8;
  pkg.coin.CoinType coin_type = 9;
}

// legacy MsgVoteInbound
// defined to keep codec compatibility
message MsgVoteOnObservedInboundTx {
  string creator = 1;
  string sender = 2;
  int64 sender_chain_id = 3;
  string receiver = 4;
  int64 receiver_chain = 5;
  //  string zeta_burnt = 6;
  string amount = 6 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Uint",
    (gogoproto.nullable) = false
  ];
  //  string mMint = 7;
  string message = 8;
  string in_tx_hash = 9;
  uint64 in_block_height = 10;
  uint64 gas_limit = 11;
  pkg.coin.CoinType coin_type = 12;
  string tx_origin = 13;
  string asset = 14;
  // event index of the sent asset in the observed tx
  uint64 event_index = 15;
}
